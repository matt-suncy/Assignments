{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red227\green230\blue232;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c99985\c0;\cssrgb\c91304\c92092\c92927;
}
\margl1440\margr1440\vieww11700\viewh11860\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 In these tests, it was clear that the quick sort algorithm I used was more efficient than the radix sort algorithm I implemented. In 200 trials the average time for bucket sort was 0.016307854652404787 seconds and the average time for quick sort was 0.013343315124511718 seconds. Furthermore, when keeping track of which algorithm won each individual \'93race\'94, quick sort won 198 times and radix sort only won 2 times. Based on the empirical data from these trials, quick sort is on average, \cf2 \cb3 \expnd0\expndtw0\kerning0
0.00296453952 seconds\cf0 \cb1 \kerning1\expnd0\expndtw0  faster than radix sort for arrays of this size and nature.\
}